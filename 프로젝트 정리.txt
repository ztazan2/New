게임 기획 전체 정리

1. UI 작업
구성 요소: 타이틀, 스테이지 선택, 인게임 UI 등.
해상도: FHD(1920x1080), PC 버전 기준.

2. 게임 시작 프로세스
포탑 지급: 시작 시 3종 포탑 랜덤 지급(중복 불가).
테트리스 지급: 랜덤으로 7개 지급(중복 가능).
특성 선택: 5가지 특성 중 1개 선택(추후 추가 가능).
스테이지 선택: 2~3개의 스테이지 중 원하는 곳 이동(추후 추가 가능).

3. 테트리스 시스템
초기 지급: 시작 시 테트리스 3개 지급.
웨이브 클리어 보상: 웨이브 클리어 시 테트리스 2개 추가 지급.
추가 테트리스: 카드 뽑기로 골드 사용 후 획득.

테트리스 종류

I 블록: □□□□ (직선형)

O 블록:
코드 복사
□□  
□□
(정사각형)
T 블록:
코드 복사
□□□  
 □
(T자형)
L 블록:
코드 복사
□  
□  
□□
(L자형)
J 블록:
코드 복사
  □  
  □  
□□
(J자형)
S 블록:
코드 복사
 □□  
□□
(S자형)
Z 블록:
코드 복사
□□  
 □□
(Z자형)
설치 규칙:
길이 완전히 막히는 경우 설치 불가.
포탑은 테트리스 위 또는 일부 장애물 위에 설치 가능.

4. 전투 시스템
준비 시간: 준비 시간 후 자동 웨이브 시작.
웨이브 시작 버튼: 오른쪽 상단의 Battle 버튼으로 시작.
배속 기능: 0.5, 1, 2, 3배속 설정 가능.
몬스터:
캠프파이어에 접촉 시 데미지 입힘(몬스터 강함 비례).
클릭 시 이름, 체력, 공격력 표시.
보스: 각 스테이지 마지막 웨이브(5웨이브)에서 등장.

5. 포탑 시스템
포탑 종류:
유도 미사일
기본 포탑
화염방사기(다수 딜)
레이저(단일 딜)
드론(추후 추가 가능)
포탑 강화:
골드로 강화 가능(SO 방식).
클릭 시 정보, 강화 비용, 판매 비용, 타겟 우선순위 설정 가능.

6. 골드 및 보상 시스템
골드 획득:
웨이브 클리어 보상(난이도 비례).
몬스터 처치 시 1G 획득.
보물상자(확률 보상):
골드, 속성 테트리스, 스킬 획득 가능(총 2~3개).
외부 재화:
스테이지 클리어 보상으로 획득.
패시브 스킬 구매 가능(추후 추가 가능).

7. 기타 시스템
스테이지 유지:
체력은 스테이지가 끝나도 회복되지 않음.
클리어 시 새로운 타워 선택 가능.
캠프파이어 데미지: 몬스터 강함에 비례하여 데미지 입음.
Save & Load: 추후 추가 가능.

8. 추가 개발 예정
알고리즘:
몬스터 경로: A*, NavMesh 알고리즘 활용.
특성 및 외부 스킬:
특성 및 패시브 스킬 추가 가능.
확장성:
스테이지 5개 이상 확장.
새로운 포탑 및 테트리스 블록 추가.
게임 설정 UI: 난이도 및 환경 설정.

===============================
목적 : 큐브 추가 배치 시 적 이동 경로
변화 확인
ㄴ 궁극적 : 실시간으로 맵의 값이 바뀌어도
적이 그에 따라 이동을 하느냐 마느냐!

1. 마우스 클릭시 큐브 배치 o

2. 에너미
생성 : 프리팹 할당, 일정 주기로 생성
에너미 이동 : 내부메쉬 활용, a스타 알고리즘
생성 위치 : 코드상에서 할당

ㄴ Gizmo : 에너미 이동 경로 시각적으로 확인 가능

Nav Mesh Obstacle
ㄴ 생성된 오브젝트를 장애물로 인식
ㄴ 단순하게 장애물로만 인식
ㄴ 이동 경로에는 영향을 미치지 못함.

Carve 
ㄴ 이동 불가 범위를 생성한다. 
ㄴ 장애물 이동 가능 범위 활성화를 해제해 주는 느낌
ㄴ 장애물로만 인식하는게 아니라
ㄴ 이동 경로에도 영향을 미친다.

1. Unity에서 에이전트가 그리드 중심으로 경로를 탐색하고 이동하도록 만들기
ㄴ 그리드 컴포넌트를 참조하여 
ㄴ 유닛의 위치가 NavMesh 경로를 따라 이동하더라도
ㄴ 맵의 각 그리드 칸 중심(맵의 정렬된 1칸 단위 중심)을 따라 이동하도록 구현
새로운 경로가 등장하면 막힌 경로는 지우고, 새로운 경로만 따라 이동하도록 구현
ㄴ여기서 유닛이 그리드를 중심으로 깔끔하게 움직이도록 구현이 가능할까?

1.1 장애물 위치에 맞게 그리드 재배치
ㄴ

2. Unity Game 창에서 경로를 점선으로 표시
ㄴ Unity Game 창에서 경로를 점선으로 표시하려면 LineRenderer를 사용하여야 한다.


3. 최적화(여유 있을때)
ㄴ 경로를 
ㄴ 가상의 길잡이 혼자만 이동 경로 계산
ㄴ 나머지 오브젝트는 계산하지 않고 
ㄴ 길잡이를 따라가는 느낌
ㄴ 만약 수정을 한다면 
ㄴ 에너미.cs에서 수정을 하여야한다.
ㄴ 목적 : 렉을 걸리지 않게 해주기 위해

에니메이션 


















